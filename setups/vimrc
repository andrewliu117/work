"Set mapleader
let g:mapleader = ","

let g:AutoComplPop_MappingDriven = 1

let g:pumselect = 0
inoremap <expr> <TAB>   MaySelect()
function MaySelect()
	if(pumvisible())
		let g:pumselect = 1
		return "\<DOWN>"
	endif
	return "\<TAB>"
endfunc

inoremap <expr> <Space> MayComplete()
func MayComplete()
	if (pumvisible() && g:pumselect)
		let g:pumselect = 0
		return "\<CR>"
	endif
	return "\<Space>"
endfunc

inoremap <expr> <CR> StateChangeEnter()
func StateChangeEnter()
	let g:pumselect = 0
	return "\<CR>"
endfunc

"
set nu

"
syntax on
set fdm=syntax

"
set guifont=DejaVu\ Sans\ Mono\ 12

"
set softtabstop=4
set shiftwidth=4
"set expandtab
set tabstop=4
set nu

"toolbar
set guioptions-=T

"
set nobackup

set backspace=indent,eol,start

"
set formatoptions=tcrqn

"
set smarttab

"normal
"set clipboard+=unnamed

"
set cindent
set smartindent
set incsearch
set autoindent

"Show matching bracets
set showmatch

"Get out of VI's compatible mode
"set nocompatible

"Have the mouse enabled all the time
"set mouse=a
"set mouse=n

"Set to auto read when a file is changed from the outside
set autoread

"Enable filetype plugin
filetype plugin indent on

"torte
"colo torte
"colo desert
"colo blue
"colo darkblue
colo default
"colo delek
"colo elflord
"colo evening
"colo koehler
"colo morning
"colo murphy
"colo pablo
"colo peachbuff
"colo ron
"colo shine
"colo zellner

"utf-8gbk
set fileencodings=utf-8,chinese

"
set linebreak

"
set hlsearch

"
set history=200

"
set foldenable
set foldcolumn=2
"set foldlevel=3

"
let g:netrw_hide= 1
let g:netrw_list_hide= '^\..*'



"AutoCommand
autocmd BufReadPost *
            \ if line("'\"") > 0 && line("'\"") <= line("$") |
            \ exe "normal g`\"" |
            \ endif



".c,.h.cpp,.sh,.java,.php,.pyTaglist
autocmd BufNewFile *.[ch],*.cpp,*.sh,*.java,*.php,*.py exec ":call SetTitle()"
".c,.h.cpp,.sh,.java,.php,.pyTaglist
"autocmd BufRead *.[ch],*.cpp,*.sh,*.java,*.php,*.py exec ":Tlist"
"
autocmd BufNewFile * normal G
"php
autocmd BufNewFile *.php normal k

"python
autocmd BufNewFile,BufRead *.py set cinwords=if,elif,else,for,while,try,expect,finally,def,class

"Csyntax
autocmd BufNewFile,BufRead *.[ch],*.cpp,*.cc set foldmethod=syntax

"indent
autocmd BufNewFile,BufRead *.py,*.sh,*.java,*.php set foldmethod=indent

"Java
autocmd FileType java setlocal omnifunc=javacomplete#Complete
"autocmd FileType java set tags=./tags,./../tags,./../../tags

"
"autocmd BufEnter * call DoWordComplete()

"<C-X><C-O><leader>;
imap <leader>; <C-X><C-O>

"
vmap <leader>c "+y
nmap <leader>c "+y

"
"imap <leader>v <ESC>"+p "insert,v
vmap <leader>v <ESC>"+p
nmap <leader>v "+p

"TaglistF4VIM
map <F4> :Tlist<CR>

"F5Ctrl-F5
map <F5> :call CompileRun()<CR>
map <C-F5> :call Debug()<CR>

"tab:tabnew<leader>t:tabn, :tabp<leader>n,
"<leader>p
map <leader>t :tabnew<CR>
map <leader>n :tabn<CR>
map <leader>p :tabp<CR>

"
nmap <SPACE> @=((foldclosed(line('.')) < 0) ? 'zc' : 'zo')<CR>

"<leader>r
nmap <leader>r :<UP>

"cscope
set csprg=/usr/bin/cscope
let Tlist_Ctags_Cmd='/usr/bin/ctags'
let Tlist_Show_One_File=1
let Tlist_Exit_OnlyWindow=1
let Tlist_Use_Right_Window=0
"Taglist
"let Tlist_Auto_Open=1

" added by andrew
nnoremap <buffer> <silent> <C-T> :TlistToggle<CR>

"tags
"set tags=./tags,./../tags,./../../tags

"<leader>e
if has("unix")
        map <leader>e :e <C-R>=expand("%:p:h") . "/" <CR>
else
        map <leader>e :e <C-R>=expand("%:p:h") . "\" <CR>
endif

"CompileRun
func CompileRun()
        exec "w"
        "C
        if &filetype == 'c'
                exec "!gcc % -g -o %<"
                exec "!./%<"
                "Java
        elseif &filetype == 'java'
                exec "!javac %"
                exec "!java %<"
                "php
        elseif &filetype == 'php'
                exec "!php %"
                "bash
        elseif &filetype == 'sh'
                exec "!bash %"
                "python
        elseif &filetype == "python"
                exec "!python %"
        endif
endfunc
"CompileRun

"Debug
func Debug()
        exec "w"
        "C
        if &filetype == 'c'
                exec "!gcc % -g -o %<"
                exec "!gdb %<"
                "Java
        elseif &filetype == 'java'
                exec "!javac %"
                exec "!jdb %<"
                "Php
        elseif &filetype == 'php'
                exec "!php %"
                "bash
        elseif &filetype == 'sh'
                exec "!bash -x %"
                "python
        elseif &filetype == 'python'
                exec "!pdb %"
        endif
endfunc
"Debug

"SetTitle
func SetTitle()
        ".sh
        if &filetype == 'sh' || &filetype == 'python'
                call setline(1, "\#========================================================================")
                call append(line("."), "\# Author: Charlse.Zhang")
                call append(line(".")+1, "\# Email: feiyuwgmail.com")
                call append(line(".")+2, "\# File Name: ".expand("%"))
                call append(line(".")+3, "\# Description: ")
                call append(line(".")+4, "\#   ")
                call append(line(".")+5, "\# Edit History: ")
                call append(line(".")+6, "\#   ".strftime("%Y-%m-%d")."    File created.")
                call append(line(".")+7, "\#========================================================================")
                call append(line(".")+8, "")
                "
        else
                call setline(1, "/**")
                call append(line("."), "=========================================================================")
                call append(line(".")+1, " Author: Charlse.Zhang")
                call append(line(".")+2, " Email: feiyuwgmail.com")
                call append(line(".")+3, " File Name: ".expand("%"))
                call append(line(".")+4, " Description: ")
                call append(line(".")+5, "   ")
                call append(line(".")+6, " Edit History: ")
                call append(line(".")+7, "   ".strftime("%Y-%m-%d")."    File created.")
                call append(line(".")+8, "=========================================================================")
                call append(line(".")+9, "**/")
                call append(line(".")+10, "")
        endif
        "php
        if &filetype == 'php'
                call append(0, "<?php")
                call append(line("$"), "?>")
        endif
        "sh
        if &filetype == 'sh'
                call append(0, "\#!/bin/bash")
                "python
        elseif &filetype == 'python'
                call append(0, "\#!/usr/bin/env python")
                call append(1, "\# -*- coding: utf-8 -*-")
        endif
endfunc

"doxygen setting
"plugin DoxygenToolkit.vim
map <F2>a : DoxAuthor<CR>
map <F2>f : Dox<CR>
map <F2>b : DoxBlock<CR>
map <F2>c O/** */
map <F2>v $a    /**< */
